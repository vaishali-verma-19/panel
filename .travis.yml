git:
  depth: 100

language: generic

os:
  - linux
arch:
  - arm64
  - amd64

services:
  - xvfb

sudo: false

addons:
  apt:
    packages:
    - libglu1-mesa

env:
  global:
    - PYENV_VERSION=3.7
    - CHANS_DEV="-c pyviz/label/dev -c bokeh -c conda-forge"
    - CHANS_REL="-c pyviz -c bokeh -c conda-forge"
    - LABELS_DEV="--label dev"
    - LABELS_REL="--label dev --label main"
    - PKG_TEST_PYTHON="--test-python=py36"
    - DISPLAY=":99.0"
    - PYTHON_VERSION=3.6

stages:
  - test
  - name: conda_dev_package
    if: tag =~ ^v(\d+|\.)+([a-z]|rc)\d+$
  - name: conda_package
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)+([a-z]|rc)\d+$
  - name: pip_package
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$
  - name: docs
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$
  - name: docs_dev
    if: tag =~ ^v(\d+|\.)+([a-z]|rc)\d+$
  - name: docs_daily
    if: ((type = cron OR commit_message =~ /\[doc-build\]/) and branch = master)

jobs:
  include:

    ########## DEVELOPER INSTALL ##########

    - &conda_default
      stage: test
      env: DESC="dev test_all"
      before_install:
        # install doit/pyctdev and use to install miniconda...
        - pip install pyctdev && doit miniconda_install && pip uninstall -y doit pyctdev
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        # ...and now install doit/pyctdev into miniconda
        - conda install -c pyviz "pyctdev>=0.5" && doit ecosystem_setup
      install:
        - doit env_create $CHANS_DEV --python=$PYTHON_VERSION
        - source activate test-environment
        - conda install -c conda-forge mesalib
        - doit develop_install -o recommended -o tests -o build $CHANS_DEV
        - bokeh sampledata
        - doit env_capture
      before_script:
        - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x24"
        - sleep 3
      script: doit test_all_recommended
      after_failure:
        - sleep 10
      after_success: codecov

    - <<: *conda_default
      env: DESC="py2 tests" PYTHON_VERSION=2.7

    ########## END-USER PACKAGES ##########

    ## dev packages

    - &conda_pkg
      <<: *conda_default
      stage: conda_dev_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID LABELS=$LABELS_DEV CHANS=$CHANS_DEV
      install:
        - doit package_build $CHANS $PKG_TEST_PYTHON --test-group=unit_deploy
      script: doit package_upload --token=$ANACONDA_TOKEN $LABELS

    - &pip_pkg
      <<: *conda_default
      env: PYPI=testpypi PYPIUSER=$TPPU PYPIPASS=$TPPP
      stage: pip_dev_package
      install:
        - doit env_create $CHANS_DEV --python=$PYTHON_VERSION
        - source activate test-environment
        - doit develop_install $CHANS_DEV -o build && pip uninstall -y panel
        - doit pip_on_conda
        - conda install $CHANS_DEV nodejs
        - doit ecosystem=pip package_build $PKG_TEST_PYTHON --test-group=unit_deploy
      script: doit ecosystem=pip package_upload -u $PYPIUSER -p $PYPIPASS --pypi ${PYPI}

    ## release packages

    - <<: *conda_pkg
      stage: conda_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID LABELS=$LABELS_REL CHANS=$CHANS_REL

    - <<: *pip_pkg
      env: PYPI=pypi PYPIUSER=$PPU PYPIPASS=$PPP
      stage: pip_package

    ########## DOCS ##########

    - &doc_build
      <<: *conda_default
      stage: docs
      env: DESC="docs" PANEL_DOC_BUILD='true'
      script:
        - doit develop_install $CHANS_DEV -o doc -o examples
        # note: will vastly simplified in a future version of nbsite
        - nbsite generate-rst --org pyviz --project-name panel
        - nbsite build --what=html --output=builtdocs
        - touch ./builtdocs/.nojekyll
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./builtdocs
          fqdn: panel.pyviz.org
          on:
            tags: true
            all_branches: true
      after_failure:
        - cat /tmp/sphinx*
        - sleep 10

    - <<: *doc_build
      stage: docs_dev
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        local_dir: ./builtdocs
        repo: pyviz-dev/panel
        on:
          tags: true
          all_branches: true

    - <<: *doc_build
      stage: docs_daily
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        local_dir: ./builtdocs
        repo: pyviz-dev/panel
        on:
          all_branches: true
